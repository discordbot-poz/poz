name: build
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_call:
    inputs:
      tag-name:
        required: true
        type: string
    outputs:
      image_tags:
        value: ${{ jobs.docker.outputs.image_tags }}
      image_url:
        value: https://ghcr.io/${{ github.repository }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BINARY_NAME: poz

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl]
        use-cross: [true]
        include:
          - target: x86_64-unknown-linux-gnu
            use-cross: false
          - target: x86_64-unknown-linux-musl
            use-cross: false
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    defaults:
      run:
        shell: bash -xe {0}
    steps:
      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y musl-tools --no-install-recommends
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2.7.3
        with:
          key: ${{ matrix.target }}
      - name: Install cross
        if: matrix.use-cross
        uses: taiki-e/install-action@a4be0bd799507807157005543da3edbdf73a9301 # v2.28.15
        with:
          tool: cross
      - run: ${{ (matrix.use-cross) && 'cross' || 'cargo' }} build --locked --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}
            target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}.exe
      - name: Upload to release
        if: ${{ inputs.tag-name }}
        working-directory: target/${{ matrix.target }}/release/
        run: |
          if [ -e ${{ env.BINARY_NAME }}.exe ]; then
            filename="${{ env.BINARY_NAME }}-${{ inputs.tag-name }}-${{ matrix.target }}.exe"
            mv ${{ env.BINARY_NAME }}.exe "$filename"
            gh release upload ${{ inputs.tag-name }} "$filename"#${{ matrix.target }} --clobber
          else
            filename="${{ env.BINARY_NAME }}-${{ inputs.tag-name }}-${{ matrix.target }}"
            mv ${{ env.BINARY_NAME }} "$filename"
            gh release upload ${{ inputs.tag-name }} "$filename"#${{ matrix.target }} --clobber
          fi
  docker:
    needs: build
    permissions:
      packages: write
    runs-on: ubuntu-latest
    outputs:
      image_tags: ${{ steps.meta.outputs.tags }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout: |
            .github/workflows/build/Dockerfile
          sparse-checkout-cone-mode: false
      - name: Download build artifact
        uses: actions/download-artifact@c850b930e6ba138125429b7e5c93fc707a7f8427 # v4.1.4
        with:
          path: artifact
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Log in to the Container registry
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.tag-name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.tag-name }}
            type=semver,pattern={{major}},value=${{ inputs.tag-name }}
            type=edge
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          file: .github/workflows/build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
