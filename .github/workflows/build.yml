name: build
on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_call:
    inputs:
      tag-name:
        required: true
        type: string
    outputs:
      image_tags:
        value: ${{ jobs.docker.outputs.image_tags }}
      image_url:
        value: https://ghcr.io/${{ github.repository }}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  BINARY_NAME: poz

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        target: [aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl]
        use-cross: [true]
        include:
          - target: x86_64-unknown-linux-gnu
            use-cross: false
          - target: x86_64-unknown-linux-musl
            use-cross: false
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    defaults:
      run:
        shell: bash -xe {0}
    steps:
      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y musl-tools --no-install-recommends
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@a22603398250b864f7190077025cf752307154dc # v2.7.2
        with:
          key: ${{ matrix.target }}
      - name: Install cross
        if: matrix.use-cross
        uses: taiki-e/install-action@51767789bcd596c475bee2e8b0a6a8fc191f66d8 # v2.25.0
        with:
          tool: cross
      - run: ${{ (matrix.use-cross) && 'cross' || 'cargo' }} build --locked --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4.1.0
        with:
          name: ${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}
            target/${{ matrix.target }}/release/${{ env.BINARY_NAME }}.exe
      - name: Upload to release
        if: ${{ inputs.tag-name }}
        working-directory: target/${{ matrix.target }}/release/
        run: |
          if [ -e ${{ env.BINARY_NAME }}.exe ]; then
            filename="${{ env.BINARY_NAME }}-${{ inputs.tag-name }}-${{ matrix.target }}.exe"
            mv ${{ env.BINARY_NAME }}.exe "$filename"
            gh release upload ${{ inputs.tag-name }} "$filename"#${{ matrix.target }} --clobber
          else
            filename="${{ env.BINARY_NAME }}-${{ inputs.tag-name }}-${{ matrix.target }}"
            mv ${{ env.BINARY_NAME }} "$filename"
            gh release upload ${{ inputs.tag-name }} "$filename"#${{ matrix.target }} --clobber
          fi
  docker:
    needs: build
    permissions:
      packages: write
    runs-on: ubuntu-latest
    outputs:
      image_tags: ${{ steps.meta.outputs.tags }}
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_REPO: ${{ github.repository }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          sparse-checkout: |
            .github/workflows/build/Dockerfile
          sparse-checkout-cone-mode: false
      - name: Download build artifact
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4.1.1
        with:
          path: artifact
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log in to the Container registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@dbef88086f6cef02e264edb7dbf63250c17cef6c # v5.5.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ inputs.tag-name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ inputs.tag-name }}
            type=semver,pattern={{major}},value=${{ inputs.tag-name }}
            type=edge
            type=ref,event=branch
            type=ref,event=pr
            type=sha
      - name: Build and push Docker image
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: .
          file: .github/workflows/build/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
